{"version":3,"sources":["components/owner/NeedToBook.js"],"names":["NeedToBook","offer","setNeedToBook","needToBook","useState","renter","setRenter","asset","setAsset","useEffect","Promise","all","axios","get","renter_id","asset_id","then","data","catch","err","console","log","refreshNeedToBook","offersCopy","index","findIndex","option","id","splice","className","address","city","started_at","slice","ended_at","first_name","last_name","email","phone_number","onClick","dataForTransaction","value","field","dataForAsset","ownerId","owner_id","startedAt","endedAt","putHttp","postHttp","message","alert","book","dataToSend","deleteHttp","deleteTransaction"],"mappings":"kKAyGeA,UArGf,YAA2D,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WAC1C,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACRC,QAAQC,IAAI,CACVC,IAAMC,IAAN,sBAAyBZ,EAAMa,YAC/BF,IAAMC,IAAN,qBAAwBZ,EAAMc,aAE7BC,MAAK,SAACC,GACLX,EAAUW,EAAK,GAAGA,MAClBT,EAASS,EAAK,GAAGA,SAElBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAAClB,IAEJ,IAAMqB,EAAoB,WACxB,IAAMC,EAAU,YAAOpB,GACjBqB,EAAQD,EAAWE,WAAU,SAACC,GAClC,OAAOA,EAAOC,KAAO1B,EAAM0B,MAE7BJ,EAAWK,OAAOJ,EAAO,GACzBtB,EAAcqB,IAgDhB,OACE,sBAAKM,UAAU,cAAf,UACE,sBAAKA,UAAU,sBAAf,oBACUtB,EAAMuB,QADhB,KAC2BvB,EAAMwB,QAEjC,sBAAKF,UAAU,sBAAf,yBACe5B,EAAM+B,WAAWC,MAAM,EAAG,OAEzC,sBAAKJ,UAAU,sBAAf,uBACa5B,EAAMiC,SAASD,MAAM,EAAG,OAErC,qBAAKJ,UAAU,wBAAf,6BACA,sBAAKA,UAAU,iBAAf,UACGxB,EAAO8B,WADV,IACuB9B,EAAO+B,aAE9B,qBAAKP,UAAU,iBAAf,SAAiCxB,EAAOgC,QACxC,qBAAKR,UAAU,iBAAf,SAAiCxB,EAAOiC,eACxC,sBAAKT,UAAU,4BAAf,UACE,wBAAQA,UAAU,kBAAkBU,QAAS,kBA/DtC,WACX,IAAMC,EAAqB,CACzBC,OAAO,EACPC,MAAO,SACPf,GAAI1B,EAAM0B,IAENgB,EAAe,CACnBC,QAAS3C,EAAM4C,SACf9B,SAAUd,EAAMc,SAChB+B,UAAW7C,EAAM+B,WACjBe,QAAS9C,EAAMiC,UAEjBxB,QAAQC,IAAI,CACVqC,YAAQ,mBAAoBR,GAC5BS,YAAS,iCAAkCN,KAE1C3B,MAAK,WACJM,OAEDJ,OAAM,SAACC,GACN,GAA8B,QAA1BA,EAAI+B,QAAQjB,OAAO,GACrB,OAAOkB,MAAM,uCAEb/B,QAAQC,IAAIF,MAwCqCiC,IAAnD,mBAGA,wBACEvB,UAAU,6BACVU,QAAS,kBAxCS,WACxB,IAAMc,EAAa,CACjBT,QAAS3C,EAAM4C,SACf9B,SAAUd,EAAMc,SAChB+B,UAAW7C,EAAM+B,WACjBe,QAAS9C,EAAMiC,UAEjBxB,QAAQC,IAAI,CACV2C,YAAW,mBAAoB,CAAE3B,GAAI1B,EAAM0B,KAC3C2B,YAAW,oCAAqCD,KAE/CrC,MAAK,WACJM,OAEDJ,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MA0BToC,IAFjB","file":"static/js/4.d7b1dbf3.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { deleteHttp, postHttp, putHttp } from '../../utils/httpRequests';\r\n\r\nfunction NeedToBook({ offer, setNeedToBook, needToBook }) {\r\n  const [renter, setRenter] = useState({});\r\n  const [asset, setAsset] = useState({});\r\n  useEffect(() => {\r\n    Promise.all([\r\n      axios.get(`/api/renter/${offer.renter_id}`),\r\n      axios.get(`/api/asset/${offer.asset_id}`),\r\n    ])\r\n      .then((data) => {\r\n        setRenter(data[0].data);\r\n        setAsset(data[1].data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [offer]);\r\n\r\n  const refreshNeedToBook = () => {\r\n    const offersCopy = [...needToBook];\r\n    const index = offersCopy.findIndex((option) => {\r\n      return option.id === offer.id;\r\n    });\r\n    offersCopy.splice(index, 1);\r\n    setNeedToBook(offersCopy);\r\n  };\r\n\r\n  const book = () => {\r\n    const dataForTransaction = {\r\n      value: true,\r\n      field: 'booked',\r\n      id: offer.id,\r\n    };\r\n    const dataForAsset = {\r\n      ownerId: offer.owner_id,\r\n      asset_id: offer.asset_id,\r\n      startedAt: offer.started_at,\r\n      endedAt: offer.ended_at,\r\n    };\r\n    Promise.all([\r\n      putHttp('/api/transaction', dataForTransaction),\r\n      postHttp('/api/asset/addUnavailableDates', dataForAsset),\r\n    ])\r\n      .then(() => {\r\n        refreshNeedToBook();\r\n      })\r\n      .catch((err) => {\r\n        if (err.message.slice(-3) === '409') {\r\n          return alert('those are unavailable dates already');\r\n        } else {\r\n          console.log(err);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteTransaction = () => {\r\n    const dataToSend = {\r\n      ownerId: offer.owner_id,\r\n      asset_id: offer.asset_id,\r\n      startedAt: offer.started_at,\r\n      endedAt: offer.ended_at,\r\n    };\r\n    Promise.all([\r\n      deleteHttp('/api/transaction', { id: offer.id }),\r\n      deleteHttp('/api/asset/deleteUnavailableDates', dataToSend),\r\n    ])\r\n      .then(() => {\r\n        refreshNeedToBook();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"transaction\">\r\n      <div className=\"transaction-details\">\r\n        asset: {asset.address}, {asset.city}\r\n      </div>\r\n      <div className=\"transaction-details\">\r\n        start Date: {offer.started_at.slice(0, 10)}\r\n      </div>\r\n      <div className=\"transaction-details\">\r\n        end Date: {offer.ended_at.slice(0, 10)}\r\n      </div>\r\n      <div className=\"renter-details-header\">Renter Details:</div>\r\n      <div className=\"renter-details\">\r\n        {renter.first_name} {renter.last_name}\r\n      </div>\r\n      <div className=\"renter-details\">{renter.email}</div>\r\n      <div className=\"renter-details\">{renter.phone_number}</div>\r\n      <div className=\"transaction-btn-container\">\r\n        <button className=\"transaction-btn\" onClick={() => book()}>\r\n          Book!\r\n        </button>\r\n        <button\r\n          className=\"transaction-btn cancel-btn\"\r\n          onClick={() => deleteTransaction()}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NeedToBook;\r\n"],"sourceRoot":""}