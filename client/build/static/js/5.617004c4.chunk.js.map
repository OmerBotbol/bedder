{"version":3,"sources":["components/owner/OwnerTransactions.js"],"names":["OwnerTransactions","transaction","transactions","setTransactions","useState","renterDetails","setRenterDetails","assetDetails","setAssetDetails","useEffect","Promise","all","axios","get","renter_id","asset_id","then","data","catch","err","console","log","className","first_name","last_name","address","city","Date","started_at","toLocaleDateString","ended_at","purpose","comments","onClick","dataToSend","value","field","id","putHttp","transactionsCopy","index","findIndex","option","splice","acceptConnection","deleteHttp"],"mappings":"kKAuGeA,UAnGf,YAA4E,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBACtD,EAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KA0CA,OAvCAC,qBAAU,WACRC,QAAQC,IAAI,CACVC,IAAMC,IAAN,sBAAyBZ,EAAYa,YACrCF,IAAMC,IAAN,qBAAwBZ,EAAYc,aAEnCC,MAAK,SAACC,GACLX,EAAiBW,EAAK,GAAGA,MACzBT,EAAgBS,EAAK,GAAGA,SAEzBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAAClB,IA8BF,6BACGI,GACC,sBAAKiB,UAAU,cAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,0BAAf,kBACQ,IACN,uBAAMA,UAAU,mBAAhB,UACGjB,EAAckB,WADjB,IAC8BlB,EAAcmB,gBAG9C,sBAAKF,UAAU,0BAAf,qBACW,IACT,uBAAMA,UAAU,mBAAhB,UACGf,EAAakB,QADhB,KAC2BlB,EAAamB,WAG1C,sBAAKJ,UAAU,0BAAf,mBACS,IACP,uBAAMA,UAAU,mBAAhB,UACG,IAAIK,KAAK1B,EAAY2B,YAAYC,qBADpC,KAC4D,IACzD,IAAIF,KAAK1B,EAAY6B,UAAUD,2BAGpC,sBAAKP,UAAU,0BAAf,qBACW,IACT,sBAAMA,UAAU,mBAAhB,SAAoCjB,EAAc0B,aAEnD9B,EAAY+B,UACX,sBAAKV,UAAU,0BAAf,sBACY,IACV,sBAAMA,UAAU,mBAAhB,SAAoCrB,EAAY+B,iBAItD,sBAAKV,UAAU,4BAAf,UACE,wBACEA,UAAU,kBACVW,QAAS,kBAjEI,WACvB,IAAMC,EAAa,CACjBC,OAAO,EACPC,MAAO,oBACPC,GAAIpC,EAAYoC,IAElBC,YAAQ,mBAAoBJ,GAAYlB,MAAK,WAC3C,IAAMuB,EAAgB,YAAOrC,GACvBsC,EAAQD,EAAiBE,WAAU,SAACC,GACxC,OAAOA,EAAOL,KAAOpC,EAAYoC,MAEnCE,EAAiBI,OAAOH,EAAO,GAC/BrC,EAAgBoC,MAqDOK,IAFjB,oBAMA,wBACEtB,UAAU,6BACVW,QAAS,WAtDnBY,YAAW,mBAAoB,CAAER,GAAIpC,EAAYoC,KAAMrB,MAAK,WAC1D,IAAMuB,EAAgB,YAAOrC,GACvBsC,EAAQD,EAAiBE,WAAU,SAACC,GACxC,OAAOA,EAAOL,KAAOpC,EAAYoC,MAEnCE,EAAiBI,OAAOH,EAAO,GAC/BrC,EAAgBoC,OA8CV","file":"static/js/5.617004c4.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { deleteHttp, putHttp } from '../../utils/httpRequests';\r\n\r\nfunction OwnerTransactions({ transaction, transactions, setTransactions }) {\r\n  const [renterDetails, setRenterDetails] = useState('');\r\n  const [assetDetails, setAssetDetails] = useState('');\r\n\r\n  //Owner needs to approve contact with renter\r\n  useEffect(() => {\r\n    Promise.all([\r\n      axios.get(`/api/renter/${transaction.renter_id}`),\r\n      axios.get(`/api/asset/${transaction.asset_id}`),\r\n    ])\r\n      .then((data) => {\r\n        setRenterDetails(data[0].data);\r\n        setAssetDetails(data[1].data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [transaction]);\r\n\r\n  const acceptConnection = () => {\r\n    const dataToSend = {\r\n      value: true,\r\n      field: 'owner_approvement',\r\n      id: transaction.id,\r\n    };\r\n    putHttp('/api/transaction', dataToSend).then(() => {\r\n      const transactionsCopy = [...transactions];\r\n      const index = transactionsCopy.findIndex((option) => {\r\n        return option.id === transaction.id;\r\n      });\r\n      transactionsCopy.splice(index, 1);\r\n      setTransactions(transactionsCopy);\r\n    });\r\n  };\r\n\r\n  const cancelConnection = () => {\r\n    deleteHttp('/api/transaction', { id: transaction.id }).then(() => {\r\n      const transactionsCopy = [...transactions];\r\n      const index = transactionsCopy.findIndex((option) => {\r\n        return option.id === transaction.id;\r\n      });\r\n      transactionsCopy.splice(index, 1);\r\n      setTransactions(transactionsCopy);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {renterDetails && (\r\n        <div className=\"transaction\">\r\n          <div className=\"transaction-text\">\r\n            <div className=\"transaction-renter-line\">\r\n              Name:{' '}\r\n              <span className=\"transaction-data\">\r\n                {renterDetails.first_name} {renterDetails.last_name}\r\n              </span>\r\n            </div>\r\n            <div className=\"transaction-renter-line\">\r\n              Address:{' '}\r\n              <span className=\"transaction-data\">\r\n                {assetDetails.address}, {assetDetails.city}\r\n              </span>\r\n            </div>\r\n            <div className=\"transaction-renter-line\">\r\n              Dates:{' '}\r\n              <span className=\"transaction-data\">\r\n                {new Date(transaction.started_at).toLocaleDateString()} -{' '}\r\n                {new Date(transaction.ended_at).toLocaleDateString()}\r\n              </span>\r\n            </div>\r\n            <div className=\"transaction-renter-line\">\r\n              Purpose:{' '}\r\n              <span className=\"transaction-data\">{renterDetails.purpose}</span>\r\n            </div>\r\n            {transaction.comments && (\r\n              <div className=\"transaction-renter-line\">\r\n                comments:{' '}\r\n                <span className=\"transaction-data\">{transaction.comments}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"transaction-btn-container\">\r\n            <button\r\n              className=\"transaction-btn\"\r\n              onClick={() => acceptConnection()}\r\n            >\r\n              Accept\r\n            </button>\r\n            <button\r\n              className=\"transaction-btn cancel-btn\"\r\n              onClick={() => cancelConnection()}\r\n            >\r\n              Deny\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default OwnerTransactions;\r\n"],"sourceRoot":""}